{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","timerId","timerId2","window","setInterval","console","info","setState","this","prevProps","name","props","debug","clearInterval","className","Component","App","clockName","hasClock","showClock","hideClock","event","preventDefault","document","addEventListener","NewTimerId","newClockName","getRandomName","removeEventListener","value","now","toString","ReactDOM","render","getElementById"],"mappings":"qMAWaA,EAAb,4MACEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAClDC,QAAS,MAHb,uDAME,WAAqB,IAAD,OACZC,EAAWC,OAAOC,aAAY,WAClC,IAAMP,GAAc,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGzDK,QAAQC,KAAR,UAAgBT,IAChB,EAAKU,SAAS,CACZV,kBAED,KAEHW,KAAKD,SAAS,CACZN,QAASC,MAlBf,gCAsBE,SAAmBO,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDF,KAAKG,MAAMD,SAzBpE,kCA6BE,WAC6B,OAAvBF,KAAKZ,MAAMK,SACbE,OAAOU,cAAcL,KAAKZ,MAAMK,WA/BtC,oBAmCE,WACE,IAAQS,EAASF,KAAKG,MAAdD,KACAb,EAAgBW,KAAKZ,MAArBC,YAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCJ,IAChC,YACD,sBAAMI,UAAU,cAAhB,SAA+BjB,WA3CvC,GAA2BkB,aCDdC,G,MAAb,4MACEpB,MAAQ,CACNqB,UAAW,UACXC,UAAU,EACVjB,QAAS,GAJb,EAoCEkB,UAAY,WACV,EAAKZ,SAAS,CACZW,UAAU,KAtChB,EA0CEE,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKf,SAAS,CACZW,UAAU,KA7ChB,uDAOE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAehB,KAAKY,WAC9CG,SAASC,iBAAiB,QAAShB,KAAKW,WAExC,IAAMM,EAAatB,OAAOC,aAAY,WACpC,IAAMsB,EAAe,EAAKC,gBAE1B,EAAKpB,SAAS,CACZU,UAAWS,MAEZ,MAEHlB,KAAKD,SAAS,CACZN,QAASwB,MApBf,kCAwBE,WACEF,SAASK,oBAAoB,cAAepB,KAAKY,WACjDG,SAASK,oBAAoB,QAASpB,KAAKW,WAC3ChB,OAAOU,cAAcL,KAAKZ,MAAMK,WA3BpC,2BA8BE,WACE,IAAM4B,EAAQ/B,KAAKgC,MAAMC,WAAW/B,OAAO,GAE3C,MAAM,SAAN,OAAgB6B,KAjCpB,oBAiDE,WACE,MAAgCrB,KAAKZ,MAA7BqB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCI,GAAY,cAAC,EAAD,CAAOR,KAAMO,WAvDlC,GAAyBF,cCPzBiB,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.773874bf.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  currentTime: string,\n  timerId: number | null,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n    timerId: null,\n  };\n\n  componentDidMount() {\n    const timerId2 = window.setInterval(() => {\n      const currentTime = new Date().toUTCString().slice(-12, -4);\n\n      // eslint-disable-next-line no-console\n      console.info(`${currentTime}`);\n      this.setState({\n        currentTime,\n      });\n    }, 1000);\n\n    this.setState({\n      timerId: timerId2,\n    });\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.timerId !== null) {\n      window.clearInterval(this.state.timerId);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{currentTime}</span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n  timerId: number;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    const NewTimerId = window.setInterval(() => {\n      const newClockName = this.getRandomName();\n\n      this.setState({\n        clockName: newClockName,\n      });\n    }, 3300);\n\n    this.setState({\n      timerId: NewTimerId,\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    window.clearInterval(this.state.timerId);\n  }\n  // eslint-disable-next-line\n  getRandomName(): string {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  }\n\n  showClock = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}